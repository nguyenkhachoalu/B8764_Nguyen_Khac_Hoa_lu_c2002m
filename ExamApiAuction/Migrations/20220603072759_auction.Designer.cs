// <auto-generated />
using System;
using ExamApiAuction.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamApiAuction.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220603072759_auction")]
    partial class auction
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExamApiAuction.Model.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Product")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<float>("Top_Price")
                        .HasColumnType("real");

                    b.Property<Guid?>("Top_User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id_Product");

                    b.HasIndex("Top_User");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("ExamApiAuction.Model.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 3, 14, 27, 57, 638, DateTimeKind.Local).AddTicks(8007));

                    b.Property<int>("Id_Auction")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Auction");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("ExamApiAuction.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 3, 14, 27, 57, 677, DateTimeKind.Local).AddTicks(392));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ExamApiAuction.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 3, 14, 27, 57, 682, DateTimeKind.Local).AddTicks(4228));

                    b.Property<string>("DesCription")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Cate")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("M_Price")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SorfDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Cate");

                    b.HasIndex("Name");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ExamApiAuction.Model.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 3, 14, 27, 57, 693, DateTimeKind.Local).AddTicks(9490));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ExamApiAuction.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Coin")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 3, 14, 27, 57, 732, DateTimeKind.Local).AddTicks(960));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Id_Roles")
                        .HasColumnType("int");

                    b.Property<bool>("Incognito")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Coin");

                    b.HasIndex("Email");

                    b.HasIndex("Id_Roles");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExamApiAuction.Model.Auction", b =>
                {
                    b.HasOne("ExamApiAuction.Model.Product", "product")
                        .WithMany("auctions")
                        .HasForeignKey("Id_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamApiAuction.Model.User", "user")
                        .WithMany("auctions")
                        .HasForeignKey("Top_User")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ExamApiAuction.Model.Bill", b =>
                {
                    b.HasOne("ExamApiAuction.Model.Auction", "auction")
                        .WithMany("bills")
                        .HasForeignKey("Id_Auction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("auction");
                });

            modelBuilder.Entity("ExamApiAuction.Model.Product", b =>
                {
                    b.HasOne("ExamApiAuction.Model.Category", "category")
                        .WithMany("products")
                        .HasForeignKey("Id_Cate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("ExamApiAuction.Model.User", b =>
                {
                    b.HasOne("ExamApiAuction.Model.Roles", "roles")
                        .WithMany("users")
                        .HasForeignKey("Id_Roles")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("roles");
                });

            modelBuilder.Entity("ExamApiAuction.Model.Auction", b =>
                {
                    b.Navigation("bills");
                });

            modelBuilder.Entity("ExamApiAuction.Model.Category", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("ExamApiAuction.Model.Product", b =>
                {
                    b.Navigation("auctions");
                });

            modelBuilder.Entity("ExamApiAuction.Model.Roles", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("ExamApiAuction.Model.User", b =>
                {
                    b.Navigation("auctions");
                });
#pragma warning restore 612, 618
        }
    }
}
